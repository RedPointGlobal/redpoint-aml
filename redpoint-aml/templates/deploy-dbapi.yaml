# dbapi pod deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    role: dbapi
    app: aml
    version: {{  .Values.images.tag }}
  name: dbapi
  namespace: {{ .Values.application.namespace }}
spec:
  selector:
    matchLabels:
      role: dbapi
      app: aml
      version: {{  .Values.images.tag }}
  replicas: {{  .Values.replicas }}
  template:
    metadata:
      labels:
        role: dbapi
        app: aml
        version: {{  .Values.images.tag }}
    spec:
      imagePullSecrets:
      - name: docker-io
      containers:
      - name: dbapi
        image: redpointglobal/ml_servicesapi:{{ .Values.images.tag }}
        imagePullPolicy: Always
        ports:
        - name: dbapi
          containerPort: 8910
        env:
        - name: CACHE_CHANNEL
          value: cache_updates
        - name: CACHE_NAME
          value: cache
        - name: CACHE_PORT
          value: "6379"
        - name: JAVA_OPTS
          value: -Xmx1g
        - name: MONGODB_ML_DB
          value: redpoint_dcc_shared
        - name: MONGODB_NAME
          valueFrom:
            secretKeyRef:
              name: mongo-conn-string
              key: MONGODB_NAME
        - name: MONGODB_TYPE
          value: MONGO   
        - name: AUTH_ENABLED
          value: "false"
        - name: PREDICT_ENABLED
          value: "false"
        - name: RABBITMQ_ENABLED
          value: "false"
        - name: REST_HTTPS_PORT
          value: "8913"
        - name: REST_HTTP_PORT
          value: "8910"
        - name: REST_NAME
          value: 0.0.0.0
        - name: TRAINING_ENABLED
          value: "false"
        - name: IS_DBAPI
          value: "true"
        - name: DATASET_CSV_STORAGE     # Dataset storage type [ADL2|GCS|S3]
          value: ""
        - name: DATASET_CSV_DIR         # Directory for storing datasets
          value: ""
        - name: ADL2_ACCOUNT_NAME       # Account name for Azure Data Lake 2
          value: ""
        - name: S3_ACCESS_KEY           # Access key for Amazon S3 Buckets
          value: ""
        - name: GCS_PROJECT_ID          # Project id for Google Cloud Storage
          value: ""
        livenessProbe:
          httpGet:
            path: /api-ml/v2/healthcheck
            port: 8910
          periodSeconds: 20
          timeoutSeconds: 15
          failureThreshold: 3
        resources: {}
      restartPolicy: Always
      initContainers:
      - name: init-cache
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup cache; do echo waiting for cache; sleep 2; done;']
